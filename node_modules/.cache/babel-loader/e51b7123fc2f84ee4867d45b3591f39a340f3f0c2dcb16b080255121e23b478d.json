{"ast":null,"code":"import isPlainObject from \"./isPlainObject\";\nexport const isMergeObj = obj => isPlainObject(obj) || Array.isArray(obj);\nconst getKeys = (obj, options) => {\n  const keys = Object.keys(obj);\n  return options.withSymbols ? keys.concat(Object.getOwnPropertySymbols(obj)) : keys;\n};\nconst getMerge = (options = {}) => {\n  const merge = (target, ...sources) => {\n    if (target && sources.length) {\n      sources.forEach(source => {\n        if (source) {\n          getKeys(source, options).forEach(key => {\n            const prop = source[key];\n            if (!options.predicate || options.predicate(key, prop)) {\n              if (typeof prop !== \"undefined\" || options.undefinedOverwrites) {\n                if (isMergeObj(prop)) {\n                  if (typeof target[key] === \"undefined\" || !isPlainObject(target[key])) {\n                    target[key] = Array.isArray(prop) ? [] : {};\n                  }\n                  merge(target[key], prop);\n                } else {\n                  target[key] = prop;\n                }\n              }\n            }\n          });\n        }\n      });\n    }\n    return target;\n  };\n  return merge;\n};\nexport default getMerge();\nexport { getMerge };","map":{"version":3,"names":["isPlainObject","isMergeObj","obj","Array","isArray","getKeys","options","keys","Object","withSymbols","concat","getOwnPropertySymbols","getMerge","merge","target","sources","length","forEach","source","key","prop","predicate","undefinedOverwrites"],"sources":["C:/Users/y2006/OneDrive/바탕 화면/poba/poba/node_modules/@rpldy/shared/lib/esm/utils/merge.js"],"sourcesContent":["import isPlainObject from \"./isPlainObject\";\nexport const isMergeObj = obj => isPlainObject(obj) || Array.isArray(obj);\nconst getKeys = (obj, options) => {\n  const keys = Object.keys(obj);\n  return options.withSymbols ? keys.concat(Object.getOwnPropertySymbols(obj)) : keys;\n};\nconst getMerge = (options = {}) => {\n  const merge = (target, ...sources) => {\n    if (target && sources.length) {\n      sources.forEach(source => {\n        if (source) {\n          getKeys(source, options).forEach(key => {\n            const prop = source[key];\n            if (!options.predicate || options.predicate(key, prop)) {\n              if (typeof prop !== \"undefined\" || options.undefinedOverwrites) {\n                if (isMergeObj(prop)) {\n                  if (typeof target[key] === \"undefined\" || !isPlainObject(target[key])) {\n                    target[key] = Array.isArray(prop) ? [] : {};\n                  }\n                  merge(target[key], prop);\n                } else {\n                  target[key] = prop;\n                }\n              }\n            }\n          });\n        }\n      });\n    }\n    return target;\n  };\n  return merge;\n};\nexport default getMerge();\nexport { getMerge };"],"mappings":"AAAA,OAAOA,aAAa,MAAM,iBAAiB;AAC3C,OAAO,MAAMC,UAAU,GAAGC,GAAG,IAAIF,aAAa,CAACE,GAAG,CAAC,IAAIC,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC;AACzE,MAAMG,OAAO,GAAGA,CAACH,GAAG,EAAEI,OAAO,KAAK;EAChC,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACL,GAAG,CAAC;EAC7B,OAAOI,OAAO,CAACG,WAAW,GAAGF,IAAI,CAACG,MAAM,CAACF,MAAM,CAACG,qBAAqB,CAACT,GAAG,CAAC,CAAC,GAAGK,IAAI;AACpF,CAAC;AACD,MAAMK,QAAQ,GAAGA,CAACN,OAAO,GAAG,CAAC,CAAC,KAAK;EACjC,MAAMO,KAAK,GAAGA,CAACC,MAAM,EAAE,GAAGC,OAAO,KAAK;IACpC,IAAID,MAAM,IAAIC,OAAO,CAACC,MAAM,EAAE;MAC5BD,OAAO,CAACE,OAAO,CAACC,MAAM,IAAI;QACxB,IAAIA,MAAM,EAAE;UACVb,OAAO,CAACa,MAAM,EAAEZ,OAAO,CAAC,CAACW,OAAO,CAACE,GAAG,IAAI;YACtC,MAAMC,IAAI,GAAGF,MAAM,CAACC,GAAG,CAAC;YACxB,IAAI,CAACb,OAAO,CAACe,SAAS,IAAIf,OAAO,CAACe,SAAS,CAACF,GAAG,EAAEC,IAAI,CAAC,EAAE;cACtD,IAAI,OAAOA,IAAI,KAAK,WAAW,IAAId,OAAO,CAACgB,mBAAmB,EAAE;gBAC9D,IAAIrB,UAAU,CAACmB,IAAI,CAAC,EAAE;kBACpB,IAAI,OAAON,MAAM,CAACK,GAAG,CAAC,KAAK,WAAW,IAAI,CAACnB,aAAa,CAACc,MAAM,CAACK,GAAG,CAAC,CAAC,EAAE;oBACrEL,MAAM,CAACK,GAAG,CAAC,GAAGhB,KAAK,CAACC,OAAO,CAACgB,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;kBAC7C;kBACAP,KAAK,CAACC,MAAM,CAACK,GAAG,CAAC,EAAEC,IAAI,CAAC;gBAC1B,CAAC,MAAM;kBACLN,MAAM,CAACK,GAAG,CAAC,GAAGC,IAAI;gBACpB;cACF;YACF;UACF,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ;IACA,OAAON,MAAM;EACf,CAAC;EACD,OAAOD,KAAK;AACd,CAAC;AACD,eAAeD,QAAQ,CAAC,CAAC;AACzB,SAASA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}