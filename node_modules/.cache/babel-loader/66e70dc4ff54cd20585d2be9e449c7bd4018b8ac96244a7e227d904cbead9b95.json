{"ast":null,"code":"import { isFunction, logger, throttle } from \"@rpldy/shared\";\nimport addLife from \"@rpldy/life-events\";\nimport defaultSend from \"@rpldy/sender\";\nimport { PROGRESS_DELAY, SENDER_EVENTS } from \"./consts\";\nimport { DEFAULT_OPTIONS, DEFAULT_PARAM_NAME } from \"./defaults\";\nconst reportItemsProgress = (items, completed, loaded, total, trigger) => {\n  items.forEach(item => {\n    logger.debugLog(`uploady.uploader.processor: file: ${item.id} progress event: loaded(${loaded}) - completed(${completed})`);\n    trigger(SENDER_EVENTS.ITEM_PROGRESS, item, completed, loaded, total);\n  });\n};\nconst onItemUploadProgress = (items, batch, e, trigger) => {\n  const completed = Math.min(e.loaded / e.total * 100, 100),\n    completedPerItem = completed / items.length,\n    loadedAverage = e.loaded / items.length;\n  reportItemsProgress(items, completedPerItem, loadedAverage, e.total, trigger);\n  trigger(SENDER_EVENTS.BATCH_PROGRESS, batch);\n};\nconst createBatchItemsSender = () => {\n  const {\n    trigger,\n    target: sender\n  } = addLife({\n    send: (items, batch, batchOptions) => {\n      const destination = batchOptions.destination,\n        url = destination?.url;\n      const throttledProgress = throttle(e => onItemUploadProgress(items, batch, e, trigger), PROGRESS_DELAY, true);\n      const send = isFunction(batchOptions.send) ? batchOptions.send : defaultSend;\n      return send(items, url, {\n        method: destination?.method || batchOptions.method || DEFAULT_OPTIONS.method,\n        paramName: destination?.filesParamName || batchOptions.inputFieldName || DEFAULT_PARAM_NAME,\n        params: {\n          ...batchOptions.params,\n          ...destination?.params\n        },\n        forceJsonResponse: batchOptions.forceJsonResponse,\n        withCredentials: batchOptions.withCredentials,\n        formatGroupParamName: batchOptions.formatGroupParamName,\n        headers: destination?.headers,\n        sendWithFormData: batchOptions.sendWithFormData,\n        formatServerResponse: batchOptions.formatServerResponse,\n        formDataAllowUndefined: batchOptions.formDataAllowUndefined,\n        isSuccessfulCall: batchOptions.isSuccessfulCall\n      }, throttledProgress);\n    }\n  }, Object.values(SENDER_EVENTS));\n  return sender;\n};\nexport default createBatchItemsSender;","map":{"version":3,"names":["isFunction","logger","throttle","addLife","defaultSend","PROGRESS_DELAY","SENDER_EVENTS","DEFAULT_OPTIONS","DEFAULT_PARAM_NAME","reportItemsProgress","items","completed","loaded","total","trigger","forEach","item","debugLog","id","ITEM_PROGRESS","onItemUploadProgress","batch","e","Math","min","completedPerItem","length","loadedAverage","BATCH_PROGRESS","createBatchItemsSender","target","sender","send","batchOptions","destination","url","throttledProgress","method","paramName","filesParamName","inputFieldName","params","forceJsonResponse","withCredentials","formatGroupParamName","headers","sendWithFormData","formatServerResponse","formDataAllowUndefined","isSuccessfulCall","Object","values"],"sources":["C:/Users/y2006/OneDrive/바탕 화면/poba/poba/node_modules/@rpldy/uploader/lib/esm/batchItemsSender.js"],"sourcesContent":["import { isFunction, logger, throttle } from \"@rpldy/shared\";\nimport addLife from \"@rpldy/life-events\";\nimport defaultSend from \"@rpldy/sender\";\nimport { PROGRESS_DELAY, SENDER_EVENTS } from \"./consts\";\nimport { DEFAULT_OPTIONS, DEFAULT_PARAM_NAME } from \"./defaults\";\nconst reportItemsProgress = (items, completed, loaded, total, trigger) => {\n  items.forEach(item => {\n    logger.debugLog(`uploady.uploader.processor: file: ${item.id} progress event: loaded(${loaded}) - completed(${completed})`);\n    trigger(SENDER_EVENTS.ITEM_PROGRESS, item, completed, loaded, total);\n  });\n};\nconst onItemUploadProgress = (items, batch, e, trigger) => {\n  const completed = Math.min(e.loaded / e.total * 100, 100),\n    completedPerItem = completed / items.length,\n    loadedAverage = e.loaded / items.length;\n  reportItemsProgress(items, completedPerItem, loadedAverage, e.total, trigger);\n  trigger(SENDER_EVENTS.BATCH_PROGRESS, batch);\n};\nconst createBatchItemsSender = () => {\n  const {\n    trigger,\n    target: sender\n  } = addLife({\n    send: (items, batch, batchOptions) => {\n      const destination = batchOptions.destination,\n        url = destination?.url;\n      const throttledProgress = throttle(e => onItemUploadProgress(items, batch, e, trigger), PROGRESS_DELAY, true);\n      const send = isFunction(batchOptions.send) ? batchOptions.send : defaultSend;\n      return send(items, url, {\n        method: destination?.method || batchOptions.method || DEFAULT_OPTIONS.method,\n        paramName: destination?.filesParamName || batchOptions.inputFieldName || DEFAULT_PARAM_NAME,\n        params: {\n          ...batchOptions.params,\n          ...destination?.params\n        },\n        forceJsonResponse: batchOptions.forceJsonResponse,\n        withCredentials: batchOptions.withCredentials,\n        formatGroupParamName: batchOptions.formatGroupParamName,\n        headers: destination?.headers,\n        sendWithFormData: batchOptions.sendWithFormData,\n        formatServerResponse: batchOptions.formatServerResponse,\n        formDataAllowUndefined: batchOptions.formDataAllowUndefined,\n        isSuccessfulCall: batchOptions.isSuccessfulCall\n      }, throttledProgress);\n    }\n  }, Object.values(SENDER_EVENTS));\n  return sender;\n};\nexport default createBatchItemsSender;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}