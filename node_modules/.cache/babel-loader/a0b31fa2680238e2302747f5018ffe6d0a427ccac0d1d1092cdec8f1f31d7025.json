{"ast":null,"code":"import { FILE_STATES, logger } from \"@rpldy/shared\";\nimport { fastAbortAll, fastAbortBatch } from \"./fastAbort\";\nconst abortNonUploadingItem = (item, aborts, finalizeItem) => {\n  logger.debugLog(`abort: aborting ${item.state} item  - `, item);\n  finalizeItem(item.id, {\n    status: 0,\n    state: FILE_STATES.ABORTED,\n    response: \"aborted\"\n  });\n  return true;\n};\nconst ITEM_STATE_ABORTS = {\n  [FILE_STATES.UPLOADING]: (item, aborts) => {\n    logger.debugLog(`abort: aborting uploading item  - `, item);\n    return aborts[item.id]();\n  },\n  [FILE_STATES.ADDED]: abortNonUploadingItem,\n  [FILE_STATES.PENDING]: abortNonUploadingItem\n};\nconst callAbortOnItem = (item, aborts, finalizeItem) => {\n  const itemState = item?.state;\n  const method = !!itemState && ITEM_STATE_ABORTS[itemState];\n  return method ? method(item, aborts, finalizeItem) : false;\n};\nconst abortItem = (id, items, aborts, finalizeItem) => callAbortOnItem(items[id], aborts, finalizeItem);\nconst getIsFastAbortNeeded = (count, threshold) => {\n  let result = false;\n  if (threshold !== 0 && threshold) {\n    result = count >= threshold;\n  }\n  return result;\n};\nconst abortAll = (items, aborts, queue, finalizeItem, options) => {\n  const itemIds = Object.values(queue).flat();\n  const isFastAbort = getIsFastAbortNeeded(itemIds.length, options.fastAbortThreshold);\n  logger.debugLog(`abort: doing abort-all (${isFastAbort ? \"fast\" : \"normal\"} abort)`);\n  if (isFastAbort) {\n    fastAbortAll(aborts);\n  } else {\n    itemIds.forEach(id => abortItem(id, items, aborts, finalizeItem));\n  }\n  return {\n    isFast: isFastAbort\n  };\n};\nconst abortBatch = (batch, batchOptions, aborts, queue, finalizeItem, options) => {\n  const threshold = batchOptions.fastAbortThreshold === 0 ? 0 : batchOptions.fastAbortThreshold || options.fastAbortThreshold;\n  const isFastAbort = getIsFastAbortNeeded(queue[batch.id].length, threshold);\n  logger.debugLog(`abort: doing abort-batch on: ${batch.id} (${isFastAbort ? \"fast\" : \"normal\"} abort)`);\n  if (isFastAbort) {\n    fastAbortBatch(batch, aborts);\n  } else {\n    batch.items.forEach(bi => callAbortOnItem(bi, aborts, finalizeItem));\n  }\n  return {\n    isFast: isFastAbort\n  };\n};\nexport { abortAll, abortBatch, abortItem };","map":{"version":3,"names":["FILE_STATES","logger","fastAbortAll","fastAbortBatch","abortNonUploadingItem","item","aborts","finalizeItem","debugLog","state","id","status","ABORTED","response","ITEM_STATE_ABORTS","UPLOADING","ADDED","PENDING","callAbortOnItem","itemState","method","abortItem","items","getIsFastAbortNeeded","count","threshold","result","abortAll","queue","options","itemIds","Object","values","flat","isFastAbort","length","fastAbortThreshold","forEach","isFast","abortBatch","batch","batchOptions","bi"],"sources":["C:/Users/y2006/OneDrive/바탕 화면/poba/poba/node_modules/@rpldy/abort/lib/esm/abort.js"],"sourcesContent":["import { FILE_STATES, logger } from \"@rpldy/shared\";\nimport { fastAbortAll, fastAbortBatch } from \"./fastAbort\";\nconst abortNonUploadingItem = (item, aborts, finalizeItem) => {\n  logger.debugLog(`abort: aborting ${item.state} item  - `, item);\n  finalizeItem(item.id, {\n    status: 0,\n    state: FILE_STATES.ABORTED,\n    response: \"aborted\"\n  });\n  return true;\n};\nconst ITEM_STATE_ABORTS = {\n  [FILE_STATES.UPLOADING]: (item, aborts) => {\n    logger.debugLog(`abort: aborting uploading item  - `, item);\n    return aborts[item.id]();\n  },\n  [FILE_STATES.ADDED]: abortNonUploadingItem,\n  [FILE_STATES.PENDING]: abortNonUploadingItem\n};\nconst callAbortOnItem = (item, aborts, finalizeItem) => {\n  const itemState = item?.state;\n  const method = !!itemState && ITEM_STATE_ABORTS[itemState];\n  return method ? method(item, aborts, finalizeItem) : false;\n};\nconst abortItem = (id, items, aborts, finalizeItem) => callAbortOnItem(items[id], aborts, finalizeItem);\nconst getIsFastAbortNeeded = (count, threshold) => {\n  let result = false;\n  if (threshold !== 0 && threshold) {\n    result = count >= threshold;\n  }\n  return result;\n};\nconst abortAll = (items, aborts, queue, finalizeItem, options) => {\n  const itemIds = Object.values(queue).flat();\n  const isFastAbort = getIsFastAbortNeeded(itemIds.length, options.fastAbortThreshold);\n  logger.debugLog(`abort: doing abort-all (${isFastAbort ? \"fast\" : \"normal\"} abort)`);\n  if (isFastAbort) {\n    fastAbortAll(aborts);\n  } else {\n    itemIds.forEach(id => abortItem(id, items, aborts, finalizeItem));\n  }\n  return {\n    isFast: isFastAbort\n  };\n};\nconst abortBatch = (batch, batchOptions, aborts, queue, finalizeItem, options) => {\n  const threshold = batchOptions.fastAbortThreshold === 0 ? 0 : batchOptions.fastAbortThreshold || options.fastAbortThreshold;\n  const isFastAbort = getIsFastAbortNeeded(queue[batch.id].length, threshold);\n  logger.debugLog(`abort: doing abort-batch on: ${batch.id} (${isFastAbort ? \"fast\" : \"normal\"} abort)`);\n  if (isFastAbort) {\n    fastAbortBatch(batch, aborts);\n  } else {\n    batch.items.forEach(bi => callAbortOnItem(bi, aborts, finalizeItem));\n  }\n  return {\n    isFast: isFastAbort\n  };\n};\nexport { abortAll, abortBatch, abortItem };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}