{"ast":null,"code":"import { isFunction } from \"@rpldy/shared\";\nconst addToFormData = (fd, name, ...rest) => {\n  if (\"set\" in fd) {\n    fd.set(name, ...rest);\n  } else {\n    if (\"delete\" in fd) {\n      fd.delete(name);\n    }\n    fd.append(name, ...rest);\n  }\n};\nconst getFormFileField = (fd, items, options) => {\n  const single = items.length === 1;\n  items.forEach((item, i) => {\n    const name = single ? options.paramName : isFunction(options.formatGroupParamName) ? options.formatGroupParamName(i, options.paramName) : `${options.paramName}[${i}]`;\n    if (item.file) {\n      addToFormData(fd, name, item.file, item.file.name);\n    } else if (item.url) {\n      addToFormData(fd, name, item.url);\n    }\n  });\n};\nconst prepareFormData = (items, options) => {\n  const fd = new FormData();\n  if (options.params) {\n    Object.entries(options.params).forEach(([key, val]) => {\n      if (options.formDataAllowUndefined || val !== undefined) {\n        addToFormData(fd, key, val);\n      }\n    });\n  }\n  getFormFileField(fd, items, options);\n  return fd;\n};\nexport default prepareFormData;","map":{"version":3,"names":["isFunction","addToFormData","fd","name","rest","set","delete","append","getFormFileField","items","options","single","length","forEach","item","i","paramName","formatGroupParamName","file","url","prepareFormData","FormData","params","Object","entries","key","val","formDataAllowUndefined","undefined"],"sources":["C:/Users/y2006/OneDrive/바탕 화면/poba/poba/node_modules/@rpldy/sender/lib/esm/xhrSender/prepareFormData.js"],"sourcesContent":["import { isFunction } from \"@rpldy/shared\";\nconst addToFormData = (fd, name, ...rest) => {\n  if (\"set\" in fd) {\n    fd.set(name, ...rest);\n  } else {\n    if (\"delete\" in fd) {\n      fd.delete(name);\n    }\n    fd.append(name, ...rest);\n  }\n};\nconst getFormFileField = (fd, items, options) => {\n  const single = items.length === 1;\n  items.forEach((item, i) => {\n    const name = single ? options.paramName : isFunction(options.formatGroupParamName) ? options.formatGroupParamName(i, options.paramName) : `${options.paramName}[${i}]`;\n    if (item.file) {\n      addToFormData(fd, name, item.file, item.file.name);\n    } else if (item.url) {\n      addToFormData(fd, name, item.url);\n    }\n  });\n};\nconst prepareFormData = (items, options) => {\n  const fd = new FormData();\n  if (options.params) {\n    Object.entries(options.params).forEach(([key, val]) => {\n      if (options.formDataAllowUndefined || val !== undefined) {\n        addToFormData(fd, key, val);\n      }\n    });\n  }\n  getFormFileField(fd, items, options);\n  return fd;\n};\nexport default prepareFormData;"],"mappings":"AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,MAAMC,aAAa,GAAGA,CAACC,EAAE,EAAEC,IAAI,EAAE,GAAGC,IAAI,KAAK;EAC3C,IAAI,KAAK,IAAIF,EAAE,EAAE;IACfA,EAAE,CAACG,GAAG,CAACF,IAAI,EAAE,GAAGC,IAAI,CAAC;EACvB,CAAC,MAAM;IACL,IAAI,QAAQ,IAAIF,EAAE,EAAE;MAClBA,EAAE,CAACI,MAAM,CAACH,IAAI,CAAC;IACjB;IACAD,EAAE,CAACK,MAAM,CAACJ,IAAI,EAAE,GAAGC,IAAI,CAAC;EAC1B;AACF,CAAC;AACD,MAAMI,gBAAgB,GAAGA,CAACN,EAAE,EAAEO,KAAK,EAAEC,OAAO,KAAK;EAC/C,MAAMC,MAAM,GAAGF,KAAK,CAACG,MAAM,KAAK,CAAC;EACjCH,KAAK,CAACI,OAAO,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAK;IACzB,MAAMZ,IAAI,GAAGQ,MAAM,GAAGD,OAAO,CAACM,SAAS,GAAGhB,UAAU,CAACU,OAAO,CAACO,oBAAoB,CAAC,GAAGP,OAAO,CAACO,oBAAoB,CAACF,CAAC,EAAEL,OAAO,CAACM,SAAS,CAAC,GAAG,GAAGN,OAAO,CAACM,SAAS,IAAID,CAAC,GAAG;IACtK,IAAID,IAAI,CAACI,IAAI,EAAE;MACbjB,aAAa,CAACC,EAAE,EAAEC,IAAI,EAAEW,IAAI,CAACI,IAAI,EAAEJ,IAAI,CAACI,IAAI,CAACf,IAAI,CAAC;IACpD,CAAC,MAAM,IAAIW,IAAI,CAACK,GAAG,EAAE;MACnBlB,aAAa,CAACC,EAAE,EAAEC,IAAI,EAAEW,IAAI,CAACK,GAAG,CAAC;IACnC;EACF,CAAC,CAAC;AACJ,CAAC;AACD,MAAMC,eAAe,GAAGA,CAACX,KAAK,EAAEC,OAAO,KAAK;EAC1C,MAAMR,EAAE,GAAG,IAAImB,QAAQ,CAAC,CAAC;EACzB,IAAIX,OAAO,CAACY,MAAM,EAAE;IAClBC,MAAM,CAACC,OAAO,CAACd,OAAO,CAACY,MAAM,CAAC,CAACT,OAAO,CAAC,CAAC,CAACY,GAAG,EAAEC,GAAG,CAAC,KAAK;MACrD,IAAIhB,OAAO,CAACiB,sBAAsB,IAAID,GAAG,KAAKE,SAAS,EAAE;QACvD3B,aAAa,CAACC,EAAE,EAAEuB,GAAG,EAAEC,GAAG,CAAC;MAC7B;IACF,CAAC,CAAC;EACJ;EACAlB,gBAAgB,CAACN,EAAE,EAAEO,KAAK,EAAEC,OAAO,CAAC;EACpC,OAAOR,EAAE;AACX,CAAC;AACD,eAAekB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}