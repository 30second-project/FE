{"ast":null,"code":"import { invariant, BATCH_STATES } from \"@rpldy/shared\";\nimport { UPLOADER_EVENTS } from \"../consts\";\nimport processFinishedRequest from \"./processFinishedRequest\";\nimport processQueueNext from \"./processQueueNext\";\nimport { getIsBatchFinalized, finalizeBatch } from \"./batchHelpers\";\nconst getFinalizeAbortedItem = queue => (id, data) => processFinishedRequest(queue, [{\n  id,\n  info: data\n}], processQueueNext);\nconst processAbortItem = (queue, id) => {\n  const abortItemMethod = queue.getOptions().abortItem;\n  invariant(!!abortItemMethod, \"Abort Item method not provided yet abortItem was called\");\n  const state = queue.getState();\n  return abortItemMethod(id, state.items, state.aborts, getFinalizeAbortedItem(queue));\n};\nconst processAbortBatch = (queue, id) => {\n  const abortBatchMethod = queue.getOptions().abortBatch;\n  invariant(!!abortBatchMethod, \"Abort Batch method not provided yet abortItem was called\");\n  const state = queue.getState(),\n    batchData = state.batches[id],\n    batch = batchData?.batch;\n  if (batch && !getIsBatchFinalized(batch)) {\n    finalizeBatch(queue, id, UPLOADER_EVENTS.BATCH_ABORT, BATCH_STATES.ABORTED);\n    const {\n      isFast\n    } = abortBatchMethod(batch, batchData.batchOptions, state.aborts, state.itemQueue, getFinalizeAbortedItem(queue), queue.getOptions());\n    if (isFast) {\n      queue.clearBatchUploads(batch.id);\n    }\n  }\n};\nconst processAbortAll = queue => {\n  const abortAllMethod = queue.getOptions().abortAll;\n  invariant(!!abortAllMethod, \"Abort All method not provided yet abortAll was called\");\n  queue.trigger(UPLOADER_EVENTS.ALL_ABORT);\n  const state = queue.getState();\n  const {\n    isFast\n  } = abortAllMethod(state.items, state.aborts, state.itemQueue, getFinalizeAbortedItem(queue), queue.getOptions());\n  if (isFast) {\n    queue.clearAllUploads();\n  }\n};\nexport { processAbortItem, processAbortBatch, processAbortAll };","map":{"version":3,"names":["invariant","BATCH_STATES","UPLOADER_EVENTS","processFinishedRequest","processQueueNext","getIsBatchFinalized","finalizeBatch","getFinalizeAbortedItem","queue","id","data","info","processAbortItem","abortItemMethod","getOptions","abortItem","state","getState","items","aborts","processAbortBatch","abortBatchMethod","abortBatch","batchData","batches","batch","BATCH_ABORT","ABORTED","isFast","batchOptions","itemQueue","clearBatchUploads","processAbortAll","abortAllMethod","abortAll","trigger","ALL_ABORT","clearAllUploads"],"sources":["C:/Users/y2006/OneDrive/바탕 화면/poba/poba/node_modules/@rpldy/uploader/lib/esm/queue/processAbort.js"],"sourcesContent":["import { invariant, BATCH_STATES } from \"@rpldy/shared\";\nimport { UPLOADER_EVENTS } from \"../consts\";\nimport processFinishedRequest from \"./processFinishedRequest\";\nimport processQueueNext from \"./processQueueNext\";\nimport { getIsBatchFinalized, finalizeBatch } from \"./batchHelpers\";\nconst getFinalizeAbortedItem = queue => (id, data) => processFinishedRequest(queue, [{\n  id,\n  info: data\n}], processQueueNext);\nconst processAbortItem = (queue, id) => {\n  const abortItemMethod = queue.getOptions().abortItem;\n  invariant(!!abortItemMethod, \"Abort Item method not provided yet abortItem was called\");\n  const state = queue.getState();\n  return abortItemMethod(id, state.items, state.aborts, getFinalizeAbortedItem(queue));\n};\nconst processAbortBatch = (queue, id) => {\n  const abortBatchMethod = queue.getOptions().abortBatch;\n  invariant(!!abortBatchMethod, \"Abort Batch method not provided yet abortItem was called\");\n  const state = queue.getState(),\n    batchData = state.batches[id],\n    batch = batchData?.batch;\n  if (batch && !getIsBatchFinalized(batch)) {\n    finalizeBatch(queue, id, UPLOADER_EVENTS.BATCH_ABORT, BATCH_STATES.ABORTED);\n    const {\n      isFast\n    } = abortBatchMethod(batch, batchData.batchOptions, state.aborts, state.itemQueue, getFinalizeAbortedItem(queue), queue.getOptions());\n    if (isFast) {\n      queue.clearBatchUploads(batch.id);\n    }\n  }\n};\nconst processAbortAll = queue => {\n  const abortAllMethod = queue.getOptions().abortAll;\n  invariant(!!abortAllMethod, \"Abort All method not provided yet abortAll was called\");\n  queue.trigger(UPLOADER_EVENTS.ALL_ABORT);\n  const state = queue.getState();\n  const {\n    isFast\n  } = abortAllMethod(state.items, state.aborts, state.itemQueue, getFinalizeAbortedItem(queue), queue.getOptions());\n  if (isFast) {\n    queue.clearAllUploads();\n  }\n};\nexport { processAbortItem, processAbortBatch, processAbortAll };"],"mappings":"AAAA,SAASA,SAAS,EAAEC,YAAY,QAAQ,eAAe;AACvD,SAASC,eAAe,QAAQ,WAAW;AAC3C,OAAOC,sBAAsB,MAAM,0BAA0B;AAC7D,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,SAASC,mBAAmB,EAAEC,aAAa,QAAQ,gBAAgB;AACnE,MAAMC,sBAAsB,GAAGC,KAAK,IAAI,CAACC,EAAE,EAAEC,IAAI,KAAKP,sBAAsB,CAACK,KAAK,EAAE,CAAC;EACnFC,EAAE;EACFE,IAAI,EAAED;AACR,CAAC,CAAC,EAAEN,gBAAgB,CAAC;AACrB,MAAMQ,gBAAgB,GAAGA,CAACJ,KAAK,EAAEC,EAAE,KAAK;EACtC,MAAMI,eAAe,GAAGL,KAAK,CAACM,UAAU,CAAC,CAAC,CAACC,SAAS;EACpDf,SAAS,CAAC,CAAC,CAACa,eAAe,EAAE,yDAAyD,CAAC;EACvF,MAAMG,KAAK,GAAGR,KAAK,CAACS,QAAQ,CAAC,CAAC;EAC9B,OAAOJ,eAAe,CAACJ,EAAE,EAAEO,KAAK,CAACE,KAAK,EAAEF,KAAK,CAACG,MAAM,EAAEZ,sBAAsB,CAACC,KAAK,CAAC,CAAC;AACtF,CAAC;AACD,MAAMY,iBAAiB,GAAGA,CAACZ,KAAK,EAAEC,EAAE,KAAK;EACvC,MAAMY,gBAAgB,GAAGb,KAAK,CAACM,UAAU,CAAC,CAAC,CAACQ,UAAU;EACtDtB,SAAS,CAAC,CAAC,CAACqB,gBAAgB,EAAE,0DAA0D,CAAC;EACzF,MAAML,KAAK,GAAGR,KAAK,CAACS,QAAQ,CAAC,CAAC;IAC5BM,SAAS,GAAGP,KAAK,CAACQ,OAAO,CAACf,EAAE,CAAC;IAC7BgB,KAAK,GAAGF,SAAS,EAAEE,KAAK;EAC1B,IAAIA,KAAK,IAAI,CAACpB,mBAAmB,CAACoB,KAAK,CAAC,EAAE;IACxCnB,aAAa,CAACE,KAAK,EAAEC,EAAE,EAAEP,eAAe,CAACwB,WAAW,EAAEzB,YAAY,CAAC0B,OAAO,CAAC;IAC3E,MAAM;MACJC;IACF,CAAC,GAAGP,gBAAgB,CAACI,KAAK,EAAEF,SAAS,CAACM,YAAY,EAAEb,KAAK,CAACG,MAAM,EAAEH,KAAK,CAACc,SAAS,EAAEvB,sBAAsB,CAACC,KAAK,CAAC,EAAEA,KAAK,CAACM,UAAU,CAAC,CAAC,CAAC;IACrI,IAAIc,MAAM,EAAE;MACVpB,KAAK,CAACuB,iBAAiB,CAACN,KAAK,CAAChB,EAAE,CAAC;IACnC;EACF;AACF,CAAC;AACD,MAAMuB,eAAe,GAAGxB,KAAK,IAAI;EAC/B,MAAMyB,cAAc,GAAGzB,KAAK,CAACM,UAAU,CAAC,CAAC,CAACoB,QAAQ;EAClDlC,SAAS,CAAC,CAAC,CAACiC,cAAc,EAAE,uDAAuD,CAAC;EACpFzB,KAAK,CAAC2B,OAAO,CAACjC,eAAe,CAACkC,SAAS,CAAC;EACxC,MAAMpB,KAAK,GAAGR,KAAK,CAACS,QAAQ,CAAC,CAAC;EAC9B,MAAM;IACJW;EACF,CAAC,GAAGK,cAAc,CAACjB,KAAK,CAACE,KAAK,EAAEF,KAAK,CAACG,MAAM,EAAEH,KAAK,CAACc,SAAS,EAAEvB,sBAAsB,CAACC,KAAK,CAAC,EAAEA,KAAK,CAACM,UAAU,CAAC,CAAC,CAAC;EACjH,IAAIc,MAAM,EAAE;IACVpB,KAAK,CAAC6B,eAAe,CAAC,CAAC;EACzB;AACF,CAAC;AACD,SAASzB,gBAAgB,EAAEQ,iBAAiB,EAAEY,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}