{"ast":null,"code":"import { FILE_STATES } from \"./consts\";\nconst BISYM = Symbol.for(\"__rpldy-bi__\");\nlet iCounter = 0;\nconst getBatchItemWithUrl = (batchItem, url) => {\n  batchItem.url = url;\n  return batchItem;\n};\nconst getBatchItemWithFile = (batchItem, file) => {\n  batchItem.file = file;\n  return batchItem;\n};\nconst isLikeFile = f => f && (f instanceof File || f instanceof Blob || !!(typeof f === \"object\" && f.name && f.type));\nconst getIsBatchItem = obj => {\n  return !!(typeof obj === \"object\" && obj.id && obj.batchId && obj[BISYM] === true);\n};\nconst createBatchItem = (f, batchId, isPending = false) => {\n  const isAlreadyBatchItem = getIsBatchItem(f);\n  iCounter += isAlreadyBatchItem ? 0 : 1;\n  const id = isAlreadyBatchItem && f.id && typeof f.id === \"string\" ? f.id : `${batchId}.item-${iCounter}`,\n    state = isPending ? FILE_STATES.PENDING : FILE_STATES.ADDED;\n  let batchItem = {\n    id,\n    batchId,\n    state,\n    uploadStatus: 0,\n    total: 0,\n    completed: 0,\n    loaded: 0,\n    recycled: isAlreadyBatchItem,\n    previousBatch: isAlreadyBatchItem ? f.batchId : null\n  };\n  Object.defineProperty(batchItem, BISYM, {\n    value: true,\n    writable: true\n  });\n  const fileData = isAlreadyBatchItem ? f.file || f.url : f;\n  if (typeof fileData === \"string\") {\n    batchItem = getBatchItemWithUrl(batchItem, fileData);\n  } else if (isLikeFile(fileData)) {\n    batchItem = getBatchItemWithFile(batchItem, fileData);\n  } else {\n    throw new Error(`Unknown type of file added: ${typeof fileData}`);\n  }\n  return batchItem;\n};\nexport default createBatchItem;\nexport { getIsBatchItem };","map":{"version":3,"names":["FILE_STATES","BISYM","Symbol","for","iCounter","getBatchItemWithUrl","batchItem","url","getBatchItemWithFile","file","isLikeFile","f","File","Blob","name","type","getIsBatchItem","obj","id","batchId","createBatchItem","isPending","isAlreadyBatchItem","state","PENDING","ADDED","uploadStatus","total","completed","loaded","recycled","previousBatch","Object","defineProperty","value","writable","fileData","Error"],"sources":["C:/Users/y2006/OneDrive/바탕 화면/poba/poba/node_modules/@rpldy/shared/lib/esm/batchItem.js"],"sourcesContent":["import { FILE_STATES } from \"./consts\";\nconst BISYM = Symbol.for(\"__rpldy-bi__\");\nlet iCounter = 0;\nconst getBatchItemWithUrl = (batchItem, url) => {\n  batchItem.url = url;\n  return batchItem;\n};\nconst getBatchItemWithFile = (batchItem, file) => {\n  batchItem.file = file;\n  return batchItem;\n};\nconst isLikeFile = f => f && (f instanceof File || f instanceof Blob || !!(typeof f === \"object\" && f.name && f.type));\nconst getIsBatchItem = obj => {\n  return !!(typeof obj === \"object\" && obj.id && obj.batchId && obj[BISYM] === true);\n};\nconst createBatchItem = (f, batchId, isPending = false) => {\n  const isAlreadyBatchItem = getIsBatchItem(f);\n  iCounter += isAlreadyBatchItem ? 0 : 1;\n  const id = isAlreadyBatchItem && f.id && typeof f.id === \"string\" ? f.id : `${batchId}.item-${iCounter}`,\n    state = isPending ? FILE_STATES.PENDING : FILE_STATES.ADDED;\n  let batchItem = {\n    id,\n    batchId,\n    state,\n    uploadStatus: 0,\n    total: 0,\n    completed: 0,\n    loaded: 0,\n    recycled: isAlreadyBatchItem,\n    previousBatch: isAlreadyBatchItem ? f.batchId : null\n  };\n  Object.defineProperty(batchItem, BISYM, {\n    value: true,\n    writable: true\n  });\n  const fileData = isAlreadyBatchItem ? f.file || f.url : f;\n  if (typeof fileData === \"string\") {\n    batchItem = getBatchItemWithUrl(batchItem, fileData);\n  } else if (isLikeFile(fileData)) {\n    batchItem = getBatchItemWithFile(batchItem, fileData);\n  } else {\n    throw new Error(`Unknown type of file added: ${typeof fileData}`);\n  }\n  return batchItem;\n};\nexport default createBatchItem;\nexport { getIsBatchItem };"],"mappings":"AAAA,SAASA,WAAW,QAAQ,UAAU;AACtC,MAAMC,KAAK,GAAGC,MAAM,CAACC,GAAG,CAAC,cAAc,CAAC;AACxC,IAAIC,QAAQ,GAAG,CAAC;AAChB,MAAMC,mBAAmB,GAAGA,CAACC,SAAS,EAAEC,GAAG,KAAK;EAC9CD,SAAS,CAACC,GAAG,GAAGA,GAAG;EACnB,OAAOD,SAAS;AAClB,CAAC;AACD,MAAME,oBAAoB,GAAGA,CAACF,SAAS,EAAEG,IAAI,KAAK;EAChDH,SAAS,CAACG,IAAI,GAAGA,IAAI;EACrB,OAAOH,SAAS;AAClB,CAAC;AACD,MAAMI,UAAU,GAAGC,CAAC,IAAIA,CAAC,KAAKA,CAAC,YAAYC,IAAI,IAAID,CAAC,YAAYE,IAAI,IAAI,CAAC,EAAE,OAAOF,CAAC,KAAK,QAAQ,IAAIA,CAAC,CAACG,IAAI,IAAIH,CAAC,CAACI,IAAI,CAAC,CAAC;AACtH,MAAMC,cAAc,GAAGC,GAAG,IAAI;EAC5B,OAAO,CAAC,EAAE,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,CAACC,EAAE,IAAID,GAAG,CAACE,OAAO,IAAIF,GAAG,CAAChB,KAAK,CAAC,KAAK,IAAI,CAAC;AACpF,CAAC;AACD,MAAMmB,eAAe,GAAGA,CAACT,CAAC,EAAEQ,OAAO,EAAEE,SAAS,GAAG,KAAK,KAAK;EACzD,MAAMC,kBAAkB,GAAGN,cAAc,CAACL,CAAC,CAAC;EAC5CP,QAAQ,IAAIkB,kBAAkB,GAAG,CAAC,GAAG,CAAC;EACtC,MAAMJ,EAAE,GAAGI,kBAAkB,IAAIX,CAAC,CAACO,EAAE,IAAI,OAAOP,CAAC,CAACO,EAAE,KAAK,QAAQ,GAAGP,CAAC,CAACO,EAAE,GAAG,GAAGC,OAAO,SAASf,QAAQ,EAAE;IACtGmB,KAAK,GAAGF,SAAS,GAAGrB,WAAW,CAACwB,OAAO,GAAGxB,WAAW,CAACyB,KAAK;EAC7D,IAAInB,SAAS,GAAG;IACdY,EAAE;IACFC,OAAO;IACPI,KAAK;IACLG,YAAY,EAAE,CAAC;IACfC,KAAK,EAAE,CAAC;IACRC,SAAS,EAAE,CAAC;IACZC,MAAM,EAAE,CAAC;IACTC,QAAQ,EAAER,kBAAkB;IAC5BS,aAAa,EAAET,kBAAkB,GAAGX,CAAC,CAACQ,OAAO,GAAG;EAClD,CAAC;EACDa,MAAM,CAACC,cAAc,CAAC3B,SAAS,EAAEL,KAAK,EAAE;IACtCiC,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,MAAMC,QAAQ,GAAGd,kBAAkB,GAAGX,CAAC,CAACF,IAAI,IAAIE,CAAC,CAACJ,GAAG,GAAGI,CAAC;EACzD,IAAI,OAAOyB,QAAQ,KAAK,QAAQ,EAAE;IAChC9B,SAAS,GAAGD,mBAAmB,CAACC,SAAS,EAAE8B,QAAQ,CAAC;EACtD,CAAC,MAAM,IAAI1B,UAAU,CAAC0B,QAAQ,CAAC,EAAE;IAC/B9B,SAAS,GAAGE,oBAAoB,CAACF,SAAS,EAAE8B,QAAQ,CAAC;EACvD,CAAC,MAAM;IACL,MAAM,IAAIC,KAAK,CAAC,+BAA+B,OAAOD,QAAQ,EAAE,CAAC;EACnE;EACA,OAAO9B,SAAS;AAClB,CAAC;AACD,eAAec,eAAe;AAC9B,SAASJ,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}