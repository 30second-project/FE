{"ast":null,"code":"import { BATCH_STATES, createBatchItem, getIsBatchItem, isPromise } from \"@rpldy/shared\";\nimport { DEFAULT_FILTER } from \"./defaults\";\nimport { getIsFileList } from \"./utils\";\nlet bCounter = 0;\nconst processFiles = (batchId, files, isPending, fileFilter) => {\n  const all = fileFilter ? Array.prototype.map.call(files, f => getIsBatchItem(f) ? f.file || f.url : f) : [];\n  return Promise.all(Array.prototype.map.call(files, (f, index) => {\n    const filterResult = (fileFilter || DEFAULT_FILTER)(all[index], index, all);\n    return isPromise(filterResult) ? filterResult.then(result => !!result && f) : !!filterResult && f;\n  })).then(filtered => filtered.filter(Boolean).map(f => createBatchItem(f, batchId, isPending)));\n};\nconst createBatch = (files, uploaderId, options) => {\n  bCounter += 1;\n  const id = `batch-${bCounter}`;\n  const isFileList = getIsFileList(files);\n  const usedFiles = Array.isArray(files) || isFileList ? files : [files];\n  const isPending = !options.autoUpload;\n  return processFiles(id, usedFiles, isPending, options.fileFilter).then(items => {\n    return {\n      id,\n      uploaderId,\n      items,\n      state: isPending ? BATCH_STATES.PENDING : BATCH_STATES.ADDED,\n      completed: 0,\n      loaded: 0,\n      orgItemCount: items.length,\n      additionalInfo: null\n    };\n  });\n};\nexport default createBatch;","map":{"version":3,"names":["BATCH_STATES","createBatchItem","getIsBatchItem","isPromise","DEFAULT_FILTER","getIsFileList","bCounter","processFiles","batchId","files","isPending","fileFilter","all","Array","prototype","map","call","f","file","url","Promise","index","filterResult","then","result","filtered","filter","Boolean","createBatch","uploaderId","options","id","isFileList","usedFiles","isArray","autoUpload","items","state","PENDING","ADDED","completed","loaded","orgItemCount","length","additionalInfo"],"sources":["C:/Users/y2006/OneDrive/바탕 화면/poba/poba/node_modules/@rpldy/uploader/lib/esm/batch.js"],"sourcesContent":["import { BATCH_STATES, createBatchItem, getIsBatchItem, isPromise } from \"@rpldy/shared\";\nimport { DEFAULT_FILTER } from \"./defaults\";\nimport { getIsFileList } from \"./utils\";\nlet bCounter = 0;\nconst processFiles = (batchId, files, isPending, fileFilter) => {\n  const all = fileFilter ? Array.prototype.map.call(files, f => getIsBatchItem(f) ? f.file || f.url : f) : [];\n  return Promise.all(Array.prototype.map.call(files, (f, index) => {\n    const filterResult = (fileFilter || DEFAULT_FILTER)(all[index], index, all);\n    return isPromise(filterResult) ? filterResult.then(result => !!result && f) : !!filterResult && f;\n  })).then(filtered => filtered.filter(Boolean).map(f => createBatchItem(f, batchId, isPending)));\n};\nconst createBatch = (files, uploaderId, options) => {\n  bCounter += 1;\n  const id = `batch-${bCounter}`;\n  const isFileList = getIsFileList(files);\n  const usedFiles = Array.isArray(files) || isFileList ? files : [files];\n  const isPending = !options.autoUpload;\n  return processFiles(id, usedFiles, isPending, options.fileFilter).then(items => {\n    return {\n      id,\n      uploaderId,\n      items,\n      state: isPending ? BATCH_STATES.PENDING : BATCH_STATES.ADDED,\n      completed: 0,\n      loaded: 0,\n      orgItemCount: items.length,\n      additionalInfo: null\n    };\n  });\n};\nexport default createBatch;"],"mappings":"AAAA,SAASA,YAAY,EAAEC,eAAe,EAAEC,cAAc,EAAEC,SAAS,QAAQ,eAAe;AACxF,SAASC,cAAc,QAAQ,YAAY;AAC3C,SAASC,aAAa,QAAQ,SAAS;AACvC,IAAIC,QAAQ,GAAG,CAAC;AAChB,MAAMC,YAAY,GAAGA,CAACC,OAAO,EAAEC,KAAK,EAAEC,SAAS,EAAEC,UAAU,KAAK;EAC9D,MAAMC,GAAG,GAAGD,UAAU,GAAGE,KAAK,CAACC,SAAS,CAACC,GAAG,CAACC,IAAI,CAACP,KAAK,EAAEQ,CAAC,IAAIf,cAAc,CAACe,CAAC,CAAC,GAAGA,CAAC,CAACC,IAAI,IAAID,CAAC,CAACE,GAAG,GAAGF,CAAC,CAAC,GAAG,EAAE;EAC3G,OAAOG,OAAO,CAACR,GAAG,CAACC,KAAK,CAACC,SAAS,CAACC,GAAG,CAACC,IAAI,CAACP,KAAK,EAAE,CAACQ,CAAC,EAAEI,KAAK,KAAK;IAC/D,MAAMC,YAAY,GAAG,CAACX,UAAU,IAAIP,cAAc,EAAEQ,GAAG,CAACS,KAAK,CAAC,EAAEA,KAAK,EAAET,GAAG,CAAC;IAC3E,OAAOT,SAAS,CAACmB,YAAY,CAAC,GAAGA,YAAY,CAACC,IAAI,CAACC,MAAM,IAAI,CAAC,CAACA,MAAM,IAAIP,CAAC,CAAC,GAAG,CAAC,CAACK,YAAY,IAAIL,CAAC;EACnG,CAAC,CAAC,CAAC,CAACM,IAAI,CAACE,QAAQ,IAAIA,QAAQ,CAACC,MAAM,CAACC,OAAO,CAAC,CAACZ,GAAG,CAACE,CAAC,IAAIhB,eAAe,CAACgB,CAAC,EAAET,OAAO,EAAEE,SAAS,CAAC,CAAC,CAAC;AACjG,CAAC;AACD,MAAMkB,WAAW,GAAGA,CAACnB,KAAK,EAAEoB,UAAU,EAAEC,OAAO,KAAK;EAClDxB,QAAQ,IAAI,CAAC;EACb,MAAMyB,EAAE,GAAG,SAASzB,QAAQ,EAAE;EAC9B,MAAM0B,UAAU,GAAG3B,aAAa,CAACI,KAAK,CAAC;EACvC,MAAMwB,SAAS,GAAGpB,KAAK,CAACqB,OAAO,CAACzB,KAAK,CAAC,IAAIuB,UAAU,GAAGvB,KAAK,GAAG,CAACA,KAAK,CAAC;EACtE,MAAMC,SAAS,GAAG,CAACoB,OAAO,CAACK,UAAU;EACrC,OAAO5B,YAAY,CAACwB,EAAE,EAAEE,SAAS,EAAEvB,SAAS,EAAEoB,OAAO,CAACnB,UAAU,CAAC,CAACY,IAAI,CAACa,KAAK,IAAI;IAC9E,OAAO;MACLL,EAAE;MACFF,UAAU;MACVO,KAAK;MACLC,KAAK,EAAE3B,SAAS,GAAGV,YAAY,CAACsC,OAAO,GAAGtC,YAAY,CAACuC,KAAK;MAC5DC,SAAS,EAAE,CAAC;MACZC,MAAM,EAAE,CAAC;MACTC,YAAY,EAAEN,KAAK,CAACO,MAAM;MAC1BC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC,CAAC;AACJ,CAAC;AACD,eAAehB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}